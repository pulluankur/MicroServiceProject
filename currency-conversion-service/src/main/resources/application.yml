spring:
  application:
    name: currency-conversion-service
  cloud:
    stream:
      kafka.binder:
        auto-add-partitions: true
        auto-create-topics: true
        configuration:
          default:
            key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          commit.interval.ms: 1000
          #security.protocol: SASL_SSL
          #sasl.mechanism: PLAIN
        #jaas.loginModule: org.apache.kafka.common.security.plain.PlainLoginModule
        #jaas.options.username: admin
        #jaas.options.password: admin-secret
      default:
        contentType: application/json
      bindings:
        producer:
          destination: topicname
          producer:
            partition-key-expression: headers['partitionKey'] #payload string length - 1 is the partition where it will get stored
            partition-count: 4
            replication-factor: 1
            required-groups: myGroup #only applicable for rabbitMQ
        personProducer:
          destination: topicperson
          producer:
            partition-key-expression: headers['partitionKey'] #payload string length - 1 is the partition where it will get stored
            partition-count: 4
            replication-factor: 1
            required-groups: myGroup1 #only applicable for rabbitMQ
      default-binder: kafka

server:
  port: 8100

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka

#rabbitmq settings for Spring Cloud Stream to use
#  spring:
#    rabbitmq:
#      host: 127.0.0.1
#      port: 5672
#      username: guest
#      password: guest













#To transfer a call through zuul api gateway
# http://localhost:8765/{app.name}/{url}  ==>>  http://localhost:8765/currency-conversion-service/currency-conversion-feign/from/USD/to/INR/quantity/1000


#curreny-exchange-service:
#  ribbon:
#    listOfServers: http://localhost:8000, http://localhost:8001